{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iosu_\\\\Desktop\\\\Pruebas t\\xE9cnicas\\\\Iosu\\\\Prueba5\\\\todolist\\\\src\\\\components\\\\Tasklist.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskList = _ref => {\n  _s();\n  let {\n    tasks,\n    onDeleteTask,\n    onEditTask\n  } = _ref;\n  const [editedTaskIndex, setEditedTaskIndex] = useState(-1);\n  const [editedTaskContent, setEditedTaskContent] = useState(\"\");\n  const handleEditTask = index => {\n    setEditedTaskIndex(index);\n    setEditedTaskContent(tasks[index].content);\n  };\n  const handleSaveTask = index => {\n    onEditTask(index, editedTaskContent);\n    setEditedTaskIndex(-1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"task-list\",\n    children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: `task ${task.priority}`,\n      children: editedTaskIndex === index ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editedTaskContent,\n          onChange: e => setEditedTaskContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSaveTask(index),\n          children: \"Guardar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `task-content ${task.priority}`,\n          children: task.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditTask(index),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-pencil-alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onDeleteTask(index),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-trash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"sStmiNxwkLcwUxzGQ8qSayiJuOI=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","_ref","_s","tasks","onDeleteTask","onEditTask","editedTaskIndex","setEditedTaskIndex","editedTaskContent","setEditedTaskContent","handleEditTask","index","content","handleSaveTask","className","children","map","task","priority","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/iosu_/Desktop/Pruebas tÃ©cnicas/Iosu/Prueba5/todolist/src/components/Tasklist.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst TaskList = ({ tasks, onDeleteTask, onEditTask }) => {\r\n  const [editedTaskIndex, setEditedTaskIndex] = useState(-1);\r\n  const [editedTaskContent, setEditedTaskContent] = useState(\"\");\r\n\r\n  const handleEditTask = (index) => {\r\n    setEditedTaskIndex(index);\r\n    setEditedTaskContent(tasks[index].content);\r\n  };\r\n\r\n  const handleSaveTask = (index) => {\r\n    onEditTask(index, editedTaskContent);\r\n    setEditedTaskIndex(-1);\r\n  };\r\n\r\n  return (\r\n    <ul className=\"task-list\">\r\n      {tasks.map((task, index) => (\r\n        <li className={`task ${task.priority}`} key={index}>\r\n          {editedTaskIndex === index ? (\r\n            <>\r\n              <input\r\n                type=\"text\"\r\n                value={editedTaskContent}\r\n                onChange={(e) => setEditedTaskContent(e.target.value)}\r\n              />\r\n              <button onClick={() => handleSaveTask(index)}>Guardar</button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <span className={`task-content ${task.priority}`}>\r\n                {task.content}\r\n              </span>\r\n              <div>\r\n                <button onClick={() => handleEditTask(index)}>\r\n                  <i className=\"fas fa-pencil-alt\"></i>\r\n                </button>\r\n                <button onClick={() => onDeleteTask(index)}>\r\n                  <i className=\"fas fa-trash\"></i>\r\n                </button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}